/**
 * 문제: 배열 합치기
 *
 * 두 개의 2차원 배열이 주어졌을 때, 두 배열을 합치는 함수를 구현하세요.
 * 두 배열의 합은 다음과 같이 계산됩니다:
 * - 각 배열의 동일한 위치(i, j)에 있는 요소들을 더합니다.
 * - 결과 배열의 크기는 두 입력 배열 중 더 큰 크기를 가집니다.
 * - 한 배열의 범위를 벗어나는 위치는 다른 배열의 값을 그대로 사용합니다.
 *
 * 제약 조건:
 * - 각 배열의 행과 열의 길이는 2 이상 100 이하입니다.
 * - 배열의 요소는 -10 이상 20 이하의 정수입니다.
 * - 결과 배열은 같은 크기의 행과 열을 가집니다.
 *
입출력 예:
입력:
arr1 = [[1, 4], [3, 2], [4, 1]]
arr2 = [[3, 3], [3, 3]]
출력: [[15, 15], [15, 15], [15, 15]]*
입력:
arr1 = [[2, 3, 2], [4, 2, 4], [3, 1, 4]]
arr2 = [[5, 4, 3], [2, 4, 1], [3, 1, 1]]
출력: [[22, 22, 11], [36, 28, 18], [29, 20, 14]]*/

const arr1 = [
  [1, 4],
  [3, 2],
  [4, 1],
];
const arr2 = [
  [3, 3],
  [3, 3],
];
function solution(arr1, arr2) {
  // return arr1[0]
  const result = [];
  let plus = 0;
  for (let i = 0; i < arr1.length; i++) {
    // 전체돌기
    for (let j = 0; j < arr1[0].length; j++) {
      // 행돌기
      for (let k = 0; k < arr1[0].length; k++) {
        plus += arr1[j][k] * arr2[j][k];
      }
      result.push([plus]);
    }
  }
  return result;
}

console.log(solution(arr1, arr2));
// 테스트를 위한 예제 코드
// console.log(
//   solution(
//     [
//       [1, 4],
//       [3, 2],
//       [4, 1],
//     ],
//     [
//       [3, 3],
//       [3, 3],
//     ]
//   )
// );
// console.log(
//   solution(
//     [
//       [2, 3, 2],
//       [4, 2, 4],
//       [3, 1, 4],
//     ],
//     [
//       [5, 4, 3],
//       [2, 4, 1],
//       [3, 1, 1],
//     ]
//   )
// );
